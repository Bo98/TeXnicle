%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 109.000000 106.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.7.2 (Build 11C74) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 109 106
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 109 106
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 109 106 rc
-9.5 128.5 m
132.23228 128.5 l
132.23228 -13.232285 l
-9.5 -13.232285 l
h
-9.5 128.5 m
f
100.25542 48.682968 m
83.892807 50.939079 l
84.851448 57.891693 l
101.21407 55.635582 l
h
100.25542 48.682968 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -9 128 cm
109.25542 79.317032 m
92.892807 77.060921 l
93.851448 70.108307 l
110.21407 72.364418 l
h
109.25542 79.317032 m
S
1 1 1 sc
CM
83.892845 50.93911 m
67.530228 53.195221 l
68.488869 60.147835 l
84.851486 57.891724 l
h
83.892845 50.93911 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
92.892845 77.06089 m
76.530228 74.804779 l
77.488869 67.852165 l
93.851486 70.108276 l
h
92.892845 77.06089 m
S
1 1 1 sc
CM
67.53022 53.195213 m
51.167603 55.451324 l
52.126244 62.403938 l
68.488861 60.147827 l
h
67.53022 53.195213 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
76.53022 74.804787 m
60.167603 72.548676 l
61.126244 65.596062 l
77.488861 67.852173 l
h
76.53022 74.804787 m
S
1 1 1 sc
CM
101.2141 55.635605 m
84.851479 57.891716 l
85.81012 64.84433 l
102.17274 62.588219 l
h
101.2141 55.635605 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
110.2141 72.364395 m
93.851479 70.108284 l
94.81012 63.15567 l
111.17274 65.411781 l
h
110.2141 72.364395 m
S
1 1 1 sc
CM
84.851479 57.891739 m
68.488861 60.14785 l
69.447502 67.100464 l
85.81012 64.844353 l
h
84.851479 57.891739 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
93.851479 70.108261 m
77.488861 67.85215 l
78.447502 60.899536 l
94.81012 63.155647 l
h
93.851479 70.108261 m
S
1 1 1 sc
CM
68.488861 60.147827 m
52.126244 62.403938 l
53.084885 69.356552 l
69.447502 67.100449 l
h
68.488861 60.147827 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
77.488861 67.852173 m
61.126244 65.596062 l
62.084885 58.643448 l
78.447502 60.899551 l
h
77.488861 67.852173 m
S
Q
q
104.32909 61.552246 m
51.553154 68.829094 l
52.712654 77.238449 l
105.48859 69.961601 l
h
104.32909 61.552246 m
W
105.48859 69.961601 m
52.712658 77.238449 l
51.553158 68.829094 l
104.32909 61.552246 l
h
W
0 0 109 106 rc
102.17764 62.624142 m
85.815025 64.880257 l
86.773666 71.83287 l
103.13628 69.576759 l
h
102.17764 62.624142 m
f
1 J
1 j
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 114.51408 54.58551 cm
16.000008 17.749994 m
35.842518 17.74999 l
35.842525 37.592522 l
16.000008 37.592518 l
h
16.000008 17.749994 m
S
1 1 1 sc
CM
85.815025 64.880257 m
69.452408 67.13636 l
70.411049 74.088982 l
86.773666 71.83287 l
h
85.815025 64.880257 m
f
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 114.51408 54.58551 cm
35.842518 17.74999 m
55.685043 17.74999 l
55.685043 37.592503 l
35.842525 37.592522 l
h
35.842518 17.74999 m
S
1 1 1 sc
CM
69.452408 67.13636 m
53.089794 69.392471 l
54.048435 76.345093 l
70.411049 74.088982 l
h
69.452408 67.13636 m
f
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 114.51408 54.58551 cm
55.685043 17.74999 m
75.527557 17.749994 l
75.527557 37.592506 l
55.685043 37.592503 l
h
55.685043 17.74999 m
S
Q
q
0 0 109 106 rc
51.117241 55.458328 m
34.754623 57.714439 l
35.713264 64.667053 l
52.075882 62.410942 l
h
51.117241 55.458328 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -9 128 cm
60.117241 72.541672 m
43.754623 70.285561 l
44.713264 63.332947 l
61.075882 65.589058 l
h
60.117241 72.541672 m
S
1 1 1 sc
CM
34.754627 57.714462 m
18.39201 59.970573 l
19.350651 66.923187 l
35.713268 64.667076 l
h
34.754627 57.714462 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
43.754627 70.285538 m
27.39201 68.029427 l
28.350651 61.076813 l
44.713268 63.332924 l
h
43.754627 70.285538 m
S
1 1 1 sc
CM
18.391998 59.970528 m
2.0293818 62.226639 l
2.9880228 69.179253 l
19.350639 66.923141 l
h
18.391998 59.970528 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
27.391998 68.029472 m
11.029382 65.773361 l
11.988023 58.820747 l
28.350639 61.076859 l
h
27.391998 68.029472 m
S
1 1 1 sc
CM
52.075867 62.41095 m
35.713249 64.667061 l
36.67189 71.619675 l
53.034508 69.363564 l
h
52.075867 62.41095 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
61.075867 65.58905 m
44.713249 63.332939 l
45.67189 56.380325 l
62.034508 58.636436 l
h
61.075867 65.58905 m
S
1 1 1 sc
CM
35.713306 64.667023 m
19.350689 66.923134 l
20.30933 73.875748 l
36.671947 71.619644 l
h
35.713306 64.667023 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
44.713306 63.332977 m
28.350689 61.076866 l
29.30933 54.124252 l
45.671947 56.380356 l
h
44.713306 63.332977 m
S
1 1 1 sc
CM
19.350674 66.923157 m
2.988059 69.17926 l
3.9467001 76.131882 l
20.309315 73.875771 l
h
19.350674 66.923157 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
28.350674 61.076843 m
11.988059 58.82074 l
12.9467 51.868118 l
29.309315 54.124229 l
h
28.350674 61.076843 m
S
Q
q
55.19091 68.327515 m
2.4149723 75.604355 l
3.5744724 84.013718 l
56.35041 76.736862 l
h
55.19091 68.327515 m
W
56.350407 76.736862 m
3.5744705 84.01371 l
2.4149718 75.604355 l
55.190907 68.327507 l
h
W
0 0 109 106 rc
53.039459 69.399406 m
36.676842 71.655518 l
37.635479 78.608131 l
53.9981 76.35202 l
h
53.039459 69.399406 m
f
1 J
1 j
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 65.375893 61.360771 cm
16 17.749989 m
35.842518 17.74999 l
35.842518 37.592525 l
16 37.592522 l
h
16 17.749989 m
S
1 1 1 sc
CM
36.676842 71.655518 m
20.314222 73.911621 l
21.272863 80.864243 l
37.635479 78.608131 l
h
36.676842 71.655518 m
f
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 65.375893 61.360771 cm
35.842518 17.74999 m
55.68504 17.749992 l
55.68504 37.592506 l
35.842518 37.592525 l
h
35.842518 17.74999 m
S
1 1 1 sc
CM
20.314222 73.911621 m
3.9516053 76.167732 l
4.9102459 83.120354 l
21.272863 80.864243 l
h
20.314222 73.911621 m
f
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 65.375893 61.360771 cm
55.68504 17.749992 m
75.527557 17.749996 l
75.527557 37.59251 l
55.68504 37.592506 l
h
55.68504 17.749992 m
S
Q
q
0 0 109 106 rc
103.33375 69.484993 m
86.97113 71.741104 l
87.929771 78.693718 l
104.29239 76.437607 l
h
103.33375 69.484993 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -9 128 cm
112.33375 58.515007 m
95.97113 56.258896 l
96.929771 49.306282 l
113.29239 51.562393 l
h
112.33375 58.515007 m
S
1 1 1 sc
CM
86.971123 71.741119 m
70.608505 73.997231 l
71.567146 80.949844 l
87.929764 78.693741 l
h
86.971123 71.741119 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
95.971123 56.258881 m
79.608505 54.002769 l
80.567146 47.050156 l
96.929764 49.306259 l
h
95.971123 56.258881 m
S
1 1 1 sc
CM
70.608505 73.997177 m
54.245888 76.253281 l
55.204529 83.205902 l
71.567146 80.949791 l
h
70.608505 73.997177 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
79.608505 54.002823 m
63.245888 51.746719 l
64.204529 44.794098 l
80.567146 47.050209 l
h
79.608505 54.002823 m
S
1 1 1 sc
CM
104.29236 76.437607 m
87.929741 78.69371 l
88.888382 85.646332 l
105.251 83.390221 l
h
104.29236 76.437607 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
113.29236 51.562393 m
96.929741 49.30629 l
97.888382 42.353668 l
114.251 44.609779 l
h
113.29236 51.562393 m
S
1 1 1 sc
CM
87.929749 78.693733 m
71.567131 80.949844 l
72.525772 87.902458 l
88.88839 85.646347 l
h
87.929749 78.693733 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
96.929749 49.306267 m
80.567131 47.050156 l
81.525772 40.097542 l
97.88839 42.353653 l
h
96.929749 49.306267 m
S
1 1 1 sc
CM
71.567131 80.949829 m
55.204514 83.205933 l
56.163155 90.158554 l
72.525772 87.902443 l
h
71.567131 80.949829 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
80.567131 47.050171 m
64.204514 44.794067 l
65.163155 37.841446 l
81.525772 40.097557 l
h
80.567131 47.050171 m
S
Q
q
107.40739 82.35421 m
54.631447 89.631058 l
55.790947 98.040413 l
108.56689 90.763565 l
h
107.40739 82.35421 m
W
108.56689 90.763565 m
55.790958 98.040413 l
54.631458 89.631058 l
107.40739 82.35421 l
h
W
0 0 109 106 rc
105.25594 83.426109 m
88.893326 85.68222 l
89.851967 92.634834 l
106.21458 90.378723 l
h
105.25594 83.426109 m
f
1 J
1 j
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 117.59238 75.387474 cm
16.000004 17.749975 m
35.842514 17.749981 l
35.842522 37.592514 l
16.000004 37.59251 l
h
16.000004 17.749975 m
S
1 1 1 sc
CM
88.893326 85.68222 m
72.530708 87.938324 l
73.489349 94.890945 l
89.851967 92.634834 l
h
88.893326 85.68222 m
f
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 117.59238 75.387474 cm
35.842514 17.749981 m
55.68504 17.749981 l
55.68504 37.592495 l
35.842522 37.592514 l
h
35.842514 17.749981 m
S
1 1 1 sc
CM
72.530708 87.938324 m
56.168095 90.194435 l
57.126736 97.147057 l
73.489349 94.890945 l
h
72.530708 87.938324 m
f
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 117.59238 75.387474 cm
55.68504 17.749981 m
75.527557 17.749985 l
75.527557 37.592499 l
55.68504 37.592495 l
h
55.68504 17.749981 m
S
Q
q
0 0 109 106 rc
54.19558 76.260254 m
37.832962 78.516357 l
38.791603 85.468979 l
55.154221 83.212875 l
h
54.19558 76.260254 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -9 128 cm
63.19558 51.739746 m
46.832962 49.483643 l
47.791603 42.531021 l
64.154221 44.787125 l
h
63.19558 51.739746 m
S
1 1 1 sc
CM
37.832985 78.516342 m
21.470367 80.772446 l
22.429008 87.725067 l
38.791626 85.468964 l
h
37.832985 78.516342 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
46.832985 49.483658 m
30.470367 47.227554 l
31.429008 40.274933 l
47.791626 42.531036 l
h
46.832985 49.483658 m
S
1 1 1 sc
CM
21.470306 80.772499 m
5.1076918 83.02861 l
6.0663328 89.981224 l
22.428947 87.725113 l
h
21.470306 80.772499 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
30.470306 47.227501 m
14.107692 44.97139 l
15.066333 38.018776 l
31.428947 40.274887 l
h
30.470306 47.227501 m
S
1 1 1 sc
CM
55.154243 83.212868 m
38.791626 85.468979 l
39.750267 92.421593 l
56.112885 90.165482 l
h
55.154243 83.212868 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
64.154243 44.787132 m
47.791626 42.531021 l
48.750267 35.578407 l
65.112885 37.834518 l
h
64.154243 44.787132 m
S
1 1 1 sc
CM
38.791626 85.469009 m
22.429008 87.725113 l
23.38765 94.677734 l
39.750267 92.421623 l
h
38.791626 85.469009 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
47.791626 42.530991 m
31.429008 40.274887 l
32.38765 33.322266 l
48.750267 35.578377 l
h
47.791626 42.530991 m
S
1 1 1 sc
CM
22.428951 87.725136 m
6.0663366 89.981247 l
7.0249786 96.933861 l
23.387592 94.67775 l
h
22.428951 87.725136 m
f
0 0 0 sc
1 0 0 -1 -9 128 cm
31.428951 40.274864 m
15.066337 38.018753 l
16.024979 31.066139 l
32.387592 33.32225 l
h
31.428951 40.274864 m
S
Q
q
58.269279 89.129501 m
5.4933414 96.406349 l
6.6528416 104.8157 l
59.42878 97.538849 l
h
58.269279 89.129501 m
W
59.428776 97.538849 m
6.6528397 104.8157 l
5.493341 96.406342 l
58.269276 89.129494 l
h
W
0 0 109 106 rc
56.117828 90.201393 m
39.755211 92.457504 l
40.713848 99.410118 l
57.076469 97.154007 l
h
56.117828 90.201393 m
f
1 J
1 j
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 68.454262 82.162758 cm
16.000004 17.749977 m
35.842522 17.749979 l
35.842522 37.592514 l
16.000004 37.59251 l
h
16.000004 17.749977 m
S
1 1 1 sc
CM
39.755211 92.457504 m
23.392591 94.713608 l
24.351233 101.66623 l
40.713848 99.410118 l
h
39.755211 92.457504 m
f
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 68.454262 82.162758 cm
35.842522 17.749979 m
55.685043 17.749983 l
55.685043 37.592495 l
35.842522 37.592514 l
h
35.842522 17.749979 m
S
1 1 1 sc
CM
23.392591 94.713608 m
7.0299745 96.969719 l
7.988615 103.92234 l
24.351233 101.66623 l
h
23.392591 94.713608 m
f
0 0 0 sc
-0.824624 0.11370079 0.048312441 0.35038978 68.454262 82.162758 cm
55.685043 17.749983 m
75.527557 17.749985 l
75.527557 37.592499 l
55.685043 37.592495 l
h
55.685043 17.749983 m
S
Q
q
0 0 109 106 rc
96.335938 33.746094 m
101.58594 33.746094 l
101.58594 12.246094 l
96.335938 12.246094 l
h
96.335938 33.746094 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -9 128 cm
105.33594 94.253906 m
110.58594 94.253906 l
110.58594 115.75391 l
105.33594 115.75391 l
h
105.33594 94.253906 m
S
0.5 w
107.71973 111.35303 m
107.56689 103.85371 l
S
CM
98.48539 28.145462 m
97.067207 24.11573 l
100.06658 24.176857 l
h
98.48539 28.145462 m
f
0 J
0 j
1 0 0 -1 -9 128 cm
107.48539 99.854538 m
106.06721 103.88427 l
109.06658 103.82314 l
h
107.48539 99.854538 m
S
1 w
1 J
1 j
108.46094 79.701172 m
107.53418 94.72998 l
S
100.75 121.4375 m
114.90039 121.25 l
114.90039 121.25 l
S
104 124.6875 m
110.40039 124.43066 l
S
108.15887 116.25382 m
108.24831 121.33814 l
S
ep
end
%%Trailer
%%EOF
